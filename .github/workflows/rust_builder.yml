name: Build and Release Rust Project

on:
 push:
   tags:
     - 'v*'

jobs:
 create_release:
   runs-on: ubuntu-latest
   permissions:
     contents: write
   outputs:
     upload_url: ${{ steps.create_release.outputs.upload_url }}
   steps:
     - name: Checkout repository
       uses: actions/checkout@v3
     - name: Create GitHub Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         draft: false
         prerelease: false

 build:
   needs: create_release
   runs-on: ${{ matrix.os }}
   strategy:
     matrix:
       os: [ubuntu-latest, windows-latest, macos-latest]
       include:
         - os: ubuntu-latest
           asset_name: c2patool-linux
         - os: windows-latest
           asset_name: c2patool-windows.exe
         - os: macos-latest
           asset_name: c2patool-macos
   permissions:
     contents: write
   steps:
     - name: Checkout repository
       uses: actions/checkout@v3
     - name: Set up Rust
       uses: actions-rs/toolchain@v1
       with:
         toolchain: stable
         profile: minimal
         override: true
     - name: Cache Cargo registry
       uses: actions/cache@v3
       with:
         path: |
           ~/.cargo/registry
           ~/.cargo/git
           target
         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
     - name: Build project
       run: cargo build --release
     - name: Upload release asset
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ needs.create_release.outputs.upload_url }}
         asset_path: ${{ github.workspace }}/target/release/${{ matrix.asset_name }}
         asset_name: ${{ matrix.asset_name }}
         asset_content_type: application/octet-stream
